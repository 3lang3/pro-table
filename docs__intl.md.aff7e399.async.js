(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[23,18],{koTZ:function(n,e,t){"use strict";t.r(e);t("JP+d");var a=t("5uwi"),l=t("2qd2"),r=t.n(l),i=t("hf/V"),s=(t("YK34"),t("YJkK")),o=t("Uu5e"),u=(t("99O5"),t("Vskt")),d=t("ZZRV"),c=t.n(d),m=t("2CD1"),p=t("2YZa"),I=t("jXNs"),g={zhCNIntl:p["k"],enUSIntl:p["d"],viVNIntl:p["j"],itITIntl:p["f"],jaJPIntl:p["g"],esESIntl:p["e"],ruRUIntl:p["i"],msMYIntl:p["h"]},h=[{title:"index",dataIndex:"index",valueType:"indexBorder",width:72},{title:"Title",dataIndex:"title",copyable:!0,ellipsis:!0,width:200,hideInSearch:!0},{title:"Money",dataIndex:"title",width:100,valueType:"money",render:()=>(100*Math.random()).toFixed(2)},{title:"Status",dataIndex:"state",initialValue:"all",filters:!0,valueEnum:{all:{text:"ALL",status:"Default"},open:{text:"Error",status:"Error"},closed:{text:"Success",status:"Success"}}},{title:"Labels",dataIndex:"labels",width:80,render:(n,e)=>e.labels.map(n=>{var e=n.name,t=n.id,a=n.color;return c.a.createElement(u["a"],{color:a,key:t,style:{margin:4}},e)})},{title:"Created Time",key:"since",dataIndex:"created_at",valueType:"dateTime"},{title:"option",valueType:"option",dataIndex:"id",render:(n,e,t,a)=>[c.a.createElement("a",{href:e.html_url,target:"_blank",rel:"noopener noreferrer"},"show"),c.a.createElement(p["b"],{onSelect:()=>a.reload(),menus:[{key:"copy",name:"copy"},{key:"delete",name:"delete"}]})]}];e["default"]=()=>{var n=Object(d["useRef"])(),e=Object(d["useState"])("zhCNIntl"),t=Object(o["a"])(e,2),l=t[0],u=t[1];return c.a.createElement(c.a.Fragment,null,c.a.createElement(s["a"],{style:{width:200},value:l,onChange:n=>u(n),options:Object.keys(g).map(n=>({value:n,label:n}))}),c.a.createElement(p["a"],{value:g[l]},c.a.createElement(p["c"],{columns:h,actionRef:n,request:Object(i["a"])(r.a.mark((function n(){var e,t=arguments;return r.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t.length>0&&void 0!==t[0]?t[0]:{},n.abrupt("return",Object(I["a"])("https://proapi.azurewebsites.net/github/issues",{params:e}));case 2:case"end":return n.stop()}}),n)}))),rowKey:"id",rowSelection:{},pagination:{showSizeChanger:!0},dateFormatter:"string",headerTitle:"Basic Table",toolBarRender:()=>[c.a.createElement(a["a"],{key:"3",type:"primary"},c.a.createElement(m["a"],null),"New")]})))}},ndn1:function(n,e,t){"use strict";t.r(e);var a=t("G7S8"),l=t("ZZRV"),r=t.n(l),i=(t("u0Wm"),t("+cgr"),t("4gvG")),s=t.n(i),o=t("0S3p"),u=t.n(o),d=r.a.memo((function(){var n=t("q9NS"),e=n(t("ZZRV")),a=n(t("koTZ")),l=function(){return e.default.createElement(a.default,null)};return e["default"].createElement(l)}));e["default"]=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"markdown"},r.a.createElement("h1",{id:"\u56fd\u9645\u5316"},r.a.createElement("a",{"aria-hidden":"true",href:"#\u56fd\u9645\u5316"},r.a.createElement("span",{className:"icon icon-link"})),"\u56fd\u9645\u5316"),r.a.createElement("p",null,"ProTable \u5185\u7f6e\u4e86\u56fd\u9645\u5316\u7684\u652f\u6301\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6587\u672c\u91cf\u6bd4\u8f83\u5c11\u7684\u7ec4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u5b9e\u73b0\u56fd\u9645\u5316\uff0c\u6210\u672c\u4e5f\u5f88\u4f4e\u3002"),r.a.createElement("h2",{id:"\u4ee3\u7801\u793a\u4f8b"},r.a.createElement("a",{"aria-hidden":"true",href:"#\u4ee3\u7801\u793a\u4f8b"},r.a.createElement("span",{className:"icon icon-link"})),"\u4ee3\u7801\u793a\u4f8b"),r.a.createElement("p",null,"\u5168\u91cf\u7684\u6587\u672c"),r.a.createElement(s.a,{code:"const enLocale = {\n  tableFrom: {\n    search: 'Query',\n    reset: 'Reset',\n    submit: 'Submit',\n    collapsed: 'Expand',\n    expand: 'Collapse',\n    inputPlaceholder: 'Please enter',\n    selectPlaceholder: 'Please select',\n  },\n  alert: {\n    clear: 'Clear',\n  },\n  tableToolBar: {\n    leftPin: 'Pin to left',\n    rightPin: 'Pin to right',\n    noPin: 'Unpinned',\n    leftFixedTitle: 'Fixed the left',\n    rightFixedTitle: 'Fixed the right',\n    noFixedTitle: 'Not Fixed',\n    reset: 'Reset',\n    columnDisplay: 'Column Display',\n    columnSetting: 'Settings',\n    fullScreen: 'Full Screen',\n    exitFullScreen: 'Exit Full Screen',\n    reload: 'Refresh',\n    density: 'Density',\n    densityDefault: 'Default',\n    densityLarger: 'Larger',\n    densityMiddle: 'Middle',\n    densitySmall: 'Compact',\n  },\n};\n\n// \u751f\u6210 intl \u5bf9\u8c61\nconst enUSIntl = createIntl('en_US', enUS);\n\n// \u4f7f\u7528\n<IntlProvider value={enUSIntl}>\n  <ProTable />\n</IntlProvider>;\n",lang:"typescript"}),r.a.createElement("h1",{id:"demo-\u5217\u8868"},r.a.createElement("a",{"aria-hidden":"true",href:"#demo-\u5217\u8868"},r.a.createElement("span",{className:"icon icon-link"})),"Demo \u5217\u8868")),r.a.createElement(u.a,Object(a["a"])({source:{tsx:"import React, { useRef, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Select } from 'antd';\nimport ProTable, {\n  ProColumns,\n  TableDropdown,\n  IntlProvider,\n  zhCNIntl,\n  enUSIntl,\n  viVNIntl,\n  itITIntl,\n  jaJPIntl,\n  esESIntl,\n  ruRUIntl,\n  msMYIntl,\n  ActionType,\n  // @ts-ignore\n} from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst intlMap = {\n  zhCNIntl,\n  enUSIntl,\n  viVNIntl,\n  itITIntl,\n  jaJPIntl,\n  esESIntl,\n  ruRUIntl,\n  msMYIntl,\n};\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: 'index',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: 'Money',\n    dataIndex: 'title',\n    width: 100,\n    valueType: 'money',\n    render: () => (Math.random() * 100).toFixed(2),\n  },\n  {\n    title: 'Status',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: 'ALL', status: 'Default' },\n      open: {\n        text: 'Error',\n        status: 'Error',\n      },\n      closed: {\n        text: 'Success',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: 'Labels',\n    dataIndex: 'labels',\n    width: 80,\n    render: (_, row) =>\n      row.labels.map(({ name, id, color }) => (\n        <Tag\n          color={color}\n          key={id}\n          style={{\n            margin: 4,\n          }}\n        >\n          {name}\n        </Tag>\n      )),\n  },\n  {\n    title: 'Created Time',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        show\n      </a>,\n      <TableDropdown\n        onSelect={() => action.reload()}\n        menus={[\n          { key: 'copy', name: 'copy' },\n          { key: 'delete', name: 'delete' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => {\n  const actionRef = useRef<ActionType>();\n  const [intl, setIntl] = useState('zhCNIntl');\n  return (\n    <>\n      <Select<string>\n        style={{\n          width: 200,\n        }}\n        value={intl}\n        onChange={(value) => setIntl(value)}\n        options={Object.keys(intlMap).map((value) => ({ value, label: value }))}\n      />\n      <IntlProvider value={intlMap[intl]}>\n        <ProTable<GithubIssueItem>\n          columns={columns}\n          actionRef={actionRef}\n          request={async (params = {}) =>\n            request<{\n              data: GithubIssueItem[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          rowSelection={{}}\n          pagination={{\n            showSizeChanger: true,\n          }}\n          dateFormatter=\"string\"\n          headerTitle=\"Basic Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              New\n            </Button>,\n          ]}\n        />\n      </IntlProvider>\n    </>\n  );\n};\n",jsx:"import React, { useRef, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Select } from 'antd';\nimport ProTable, {\n  TableDropdown,\n  IntlProvider,\n  zhCNIntl,\n  enUSIntl,\n  viVNIntl,\n  itITIntl,\n  jaJPIntl,\n  esESIntl,\n  ruRUIntl,\n  msMYIntl, // @ts-ignore\n} from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst intlMap = {\n  zhCNIntl,\n  enUSIntl,\n  viVNIntl,\n  itITIntl,\n  jaJPIntl,\n  esESIntl,\n  ruRUIntl,\n  msMYIntl,\n};\nconst columns = [\n  {\n    title: 'index',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: 'Money',\n    dataIndex: 'title',\n    width: 100,\n    valueType: 'money',\n    render: () => (Math.random() * 100).toFixed(2),\n  },\n  {\n    title: 'Status',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: 'ALL',\n        status: 'Default',\n      },\n      open: {\n        text: 'Error',\n        status: 'Error',\n      },\n      closed: {\n        text: 'Success',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: 'Labels',\n    dataIndex: 'labels',\n    width: 80,\n    render: (_, row) =>\n      row.labels.map(({ name, id, color }) => (\n        <Tag\n          color={color}\n          key={id}\n          style={{\n            margin: 4,\n          }}\n        >\n          {name}\n        </Tag>\n      )),\n  },\n  {\n    title: 'Created Time',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        show\n      </a>,\n      <TableDropdown\n        onSelect={() => action.reload()}\n        menus={[\n          {\n            key: 'copy',\n            name: 'copy',\n          },\n          {\n            key: 'delete',\n            name: 'delete',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => {\n  const actionRef = useRef();\n  const [intl, setIntl] = useState('zhCNIntl');\n  return (\n    <>\n      <Select\n        style={{\n          width: 200,\n        }}\n        value={intl}\n        onChange={value => setIntl(value)}\n        options={Object.keys(intlMap).map(value => ({\n          value,\n          label: value,\n        }))}\n      />\n      <IntlProvider value={intlMap[intl]}>\n        <ProTable\n          columns={columns}\n          actionRef={actionRef}\n          request={async (params = {}) =>\n            request('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          rowSelection={{}}\n          pagination={{\n            showSizeChanger: true,\n          }}\n          dateFormatter=\"string\"\n          headerTitle=\"Basic Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              New\n            </Button>,\n          ]}\n        />\n      </IntlProvider>\n    </>\n  );\n};\n"}},{path:"/_demos/intl",dependencies:{antd:"4.4.0","@ant-design/icons":"4.2.1","@ant-design/pro-table":"2.4.1","umi-request":"1.3.5"},files:{}}),r.a.createElement(d,null)))}}}]);