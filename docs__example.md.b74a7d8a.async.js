(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[14,6,15,17,19],{"5ai+":function(e,n,t){},I2OH:function(e,n,t){"use strict";t.r(n);t("L/Qf");for(var a=t("2/Rp"),r=t("tJVT"),o=t("q1tI"),s=t.n(o),l=t("2YZa"),i={0:"close",1:"running",2:"online",3:"error"},u=[],d=0;d<100;d+=1)u.push({key:d,name:"TradeCode ".concat(d),status:i[Math.floor(10*Math.random())%4],updatedAt:Date.now()-Math.floor(1e3*Math.random()),createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*d,progress:Math.ceil(100*Math.random())+1});var c=[{title:"\u6807\u9898",dataIndex:"name"},{title:"\u72b6\u6001",dataIndex:"status",initialValue:"all",filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},close:{text:"\u5173\u95ed",status:"Default"},running:{text:"\u8fd0\u884c\u4e2d",status:"Processing"},online:{text:"\u5df2\u4e0a\u7ebf",status:"Success"},error:{text:"\u5f02\u5e38",status:"Error"}}},{title:"\u521b\u5efa\u65f6\u95f4",key:"since",dataIndex:"createdAt",valueType:"dateTime"},{title:"\u64cd\u4f5c",key:"option",width:120,valueType:"option",render:()=>[s.a.createElement("a",null,"\u64cd\u4f5c"),s.a.createElement("a",null,"\u5220\u9664")]}];n["default"]=()=>{var e=Object(o["useRef"])(),n=Object(o["useState"])(!1),t=Object(r["a"])(n,2),i=t[0],d=t[1];return s.a.createElement(l["c"],{columns:c,request:()=>Promise.resolve({data:u,success:!0}),rowKey:"key",pagination:{showSizeChanger:!0},search:{collapsed:i,onCollapse:d},formRef:e,toolBarRender:()=>[s.a.createElement(a["a"],{onClick:()=>{e.current&&e.current.setFieldsValue({name:"test-xxx"})}},"\u8d4b\u503c")],options:!1,dateFormatter:"string",headerTitle:"\u8868\u5355\u8d4b\u503c"})}},"K+nK":function(e,n){function t(e){return e&&e.__esModule?e:{default:e}}e.exports=t},Vstj:function(e,n,t){"use strict";t.r(n);var a=t("0Owb"),r=t("q1tI"),o=t.n(r),s=(t("B2uJ"),t("+su7"),t("qOys"),t("5Yjd")),l=t.n(s),i=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("aBcX")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)})),u=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("gnUZ")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)})),d=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("I2OH")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)})),c=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("YNjy")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)})),m=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("W7o3")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)})),p=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("l94N")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)})),f=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("s/ah")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)})),h=o.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("pMwT")),r=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(r)}));n["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"\u5404\u79cd\u793a\u4f8b"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u5404\u79cd\u793a\u4f8b"},o.a.createElement("span",{className:"icon icon-link"})),"\u5404\u79cd\u793a\u4f8b"),o.a.createElement("p",null,"\u8fd9\u91cc\u5c06\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u5e38\u7528\u7684\u529f\u80fd\u793a\u4f8b\uff0c\u65b9\u4fbf\u5927\u5bb6\u76f4\u63a5\u62f7\u8d1d\u3002"),o.a.createElement("h2",{id:"\u6279\u91cf\u64cd\u4f5c"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u6279\u91cf\u64cd\u4f5c"},o.a.createElement("span",{className:"icon icon-link"})),"\u6279\u91cf\u64cd\u4f5c")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space } from 'antd';\nimport ProTable, { ProColumns, TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a key=\"1\" href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"2\"\n        onSelect={(key) => window.alert(key)}\n        menus={[\n          { key: 'copy', name: '\u590d\u5236' },\n          { key: 'delete', name: '\u5220\u9664' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => (\n  <ProTable<GithubIssueItem>\n    columns={columns}\n    request={async (params = {}) =>\n      request<{\n        data: GithubIssueItem[];\n      }>('https://proapi.azurewebsites.net/github/issues', {\n        params,\n      })\n    }\n    rowKey=\"id\"\n    rowSelection={{}}\n    tableAlertRender={({ selectedRowKeys, selectedRows }) =>\n      `\u5f53\u524d\u5171\u9009\u4e2d ${selectedRowKeys.length} \u9879\uff0c\u5171\u6709 ${selectedRows.reduce((pre, item) => {\n        if (item.state === 'open') {\n          return pre + 1;\n        }\n        return pre;\n      }, 0)} \u9879\u672a\u89e3\u51b3 `\n    }\n    tableAlertOptionRender={(props) => {\n      const { onCleanSelected } = props;\n      return (\n        <Space>\n          <a>\u81ea\u5b9a\u4e49</a>\n          <a onClick={onCleanSelected}>\u6e05\u7a7a</a>\n        </Space>\n      );\n    }}\n    dateFormatter=\"string\"\n    headerTitle=\"\u6279\u91cf\u64cd\u4f5c\"\n    toolBarRender={(_, { selectedRowKeys }) => [\n      <Button key=\"3\" type=\"primary\">\n        <PlusOutlined />\n        \u65b0\u5efa\n      </Button>,\n      selectedRowKeys && selectedRowKeys.length && (\n        <Button\n          key=\"3\"\n          onClick={() => {\n            window.alert(selectedRowKeys.join('-'));\n          }}\n        >\n          \u6279\u91cf\u5220\u9664\n        </Button>\n      ),\n    ]}\n  />\n);\n",jsx:"import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space } from 'antd';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst columns = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a key=\"1\" href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"2\"\n        onSelect={key => window.alert(key)}\n        menus={[\n          {\n            key: 'copy',\n            name: '\u590d\u5236',\n          },\n          {\n            key: 'delete',\n            name: '\u5220\u9664',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => (\n  <ProTable\n    columns={columns}\n    request={async (params = {}) =>\n      request('https://proapi.azurewebsites.net/github/issues', {\n        params,\n      })\n    }\n    rowKey=\"id\"\n    rowSelection={{}}\n    tableAlertRender={({ selectedRowKeys, selectedRows }) =>\n      `\u5f53\u524d\u5171\u9009\u4e2d ${selectedRowKeys.length} \u9879\uff0c\u5171\u6709 ${selectedRows.reduce((pre, item) => {\n        if (item.state === 'open') {\n          return pre + 1;\n        }\n\n        return pre;\n      }, 0)} \u9879\u672a\u89e3\u51b3 `\n    }\n    tableAlertOptionRender={props => {\n      const { onCleanSelected } = props;\n      return (\n        <Space>\n          <a>\u81ea\u5b9a\u4e49</a>\n          <a onClick={onCleanSelected}>\u6e05\u7a7a</a>\n        </Space>\n      );\n    }}\n    dateFormatter=\"string\"\n    headerTitle=\"\u6279\u91cf\u64cd\u4f5c\"\n    toolBarRender={(_, { selectedRowKeys }) => [\n      <Button key=\"3\" type=\"primary\">\n        <PlusOutlined />\n        \u65b0\u5efa\n      </Button>,\n      selectedRowKeys && selectedRowKeys.length && (\n        <Button\n          key=\"3\"\n          onClick={() => {\n            window.alert(selectedRowKeys.join('-'));\n          }}\n        >\n          \u6279\u91cf\u5220\u9664\n        </Button>\n      ),\n    ]}\n  />\n);\n"}},{path:"/_demos/batch-option",dependencies:{antd:"4.4.2","@ant-design/icons":"4.2.1","@ant-design/pro-table":"2.4.4","umi-request":"1.3.5"},files:{}}),o.a.createElement(i,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"toolbar-\u641c\u7d22"},o.a.createElement("a",{"aria-hidden":"true",href:"#toolbar-\u641c\u7d22"},o.a.createElement("span",{className:"icon icon-link"})),"toolbar \u641c\u7d22")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React from 'react';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 100; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n    render: (_) => <a>{_}</a>,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    width: 200,\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a>\u64cd\u4f5c</a>, <a>\u5220\u9664</a>],\n  },\n];\n\nexport default () => {\n  return (\n    <ProTable<TableListItem, { keyWord?: string }>\n      columns={columns}\n      request={(params = {}) =>\n        Promise.resolve({\n          data: tableListDataSource.filter((item) => {\n            if (!params.keyWord) {\n              return true;\n            }\n            return item.name.includes(params.keyWord) || item.status.includes(params.keyWord);\n          }),\n          success: true,\n        })\n      }\n      options={{\n        search: {\n          name: 'keyWord',\n        },\n      }}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      size=\"middle\"\n      search={false}\n      toolBarRender={() => [\n        <Button type=\"primary\" icon={<PlusOutlined />}>\n          \u65b0\u5efa\n        </Button>,\n      ]}\n      dateFormatter=\"string\"\n      headerTitle=\"\u7b80\u5355\u641c\u7d22\"\n    />\n  );\n};\n",jsx:"import React from 'react';\nimport ProTable from '@ant-design/pro-table';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 100; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n    render: _ => <a>{_}</a>,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    width: 200,\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a>\u64cd\u4f5c</a>, <a>\u5220\u9664</a>],\n  },\n];\nexport default () => (\n  <ProTable\n    columns={columns}\n    request={(params = {}) =>\n      Promise.resolve({\n        data: tableListDataSource.filter(item => {\n          if (!params.keyWord) {\n            return true;\n          }\n\n          return item.name.includes(params.keyWord) || item.status.includes(params.keyWord);\n        }),\n        success: true,\n      })\n    }\n    options={{\n      search: {\n        name: 'keyWord',\n      },\n    }}\n    rowKey=\"key\"\n    pagination={{\n      showSizeChanger: true,\n    }}\n    size=\"middle\"\n    search={false}\n    toolBarRender={() => [\n      <Button type=\"primary\" icon={<PlusOutlined />}>\n        \u65b0\u5efa\n      </Button>,\n    ]}\n    dateFormatter=\"string\"\n    headerTitle=\"\u7b80\u5355\u641c\u7d22\"\n  />\n);\n"}},{path:"/_demos/search",dependencies:{antd:"4.4.2","@ant-design/pro-table":"2.4.4","@ant-design/icons":"4.2.1"},files:{}}),o.a.createElement(u,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"form-\u64cd\u4f5c"},o.a.createElement("a",{"aria-hidden":"true",href:"#form-\u64cd\u4f5c"},o.a.createElement("span",{className:"icon icon-link"})),"form \u64cd\u4f5c")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React, { useRef, useState } from 'react';\nimport { Button } from 'antd';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\nimport { FormInstance } from 'antd/lib/form';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 100; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a>\u64cd\u4f5c</a>, <a>\u5220\u9664</a>],\n  },\n];\n\nexport default () => {\n  const ref = useRef<FormInstance>();\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      request={() =>\n        Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        })\n      }\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      search={{\n        collapsed,\n        onCollapse: setCollapsed,\n      }}\n      formRef={ref}\n      toolBarRender={() => [\n        <Button\n          onClick={() => {\n            if (ref.current) {\n              ref.current.setFieldsValue({\n                name: 'test-xxx',\n              });\n            }\n          }}\n        >\n          \u8d4b\u503c\n        </Button>,\n      ]}\n      options={false}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8868\u5355\u8d4b\u503c\"\n    />\n  );\n};\n",jsx:"import React, { useRef, useState } from 'react';\nimport { Button } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 100; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a>\u64cd\u4f5c</a>, <a>\u5220\u9664</a>],\n  },\n];\nexport default () => {\n  const ref = useRef();\n  const [collapsed, setCollapsed] = useState(false);\n  return (\n    <ProTable\n      columns={columns}\n      request={() =>\n        Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        })\n      }\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      search={{\n        collapsed,\n        onCollapse: setCollapsed,\n      }}\n      formRef={ref}\n      toolBarRender={() => [\n        <Button\n          onClick={() => {\n            if (ref.current) {\n              ref.current.setFieldsValue({\n                name: 'test-xxx',\n              });\n            }\n          }}\n        >\n          \u8d4b\u503c\n        </Button>,\n      ]}\n      options={false}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8868\u5355\u8d4b\u503c\"\n    />\n  );\n};\n"}},{path:"/_demos/form",dependencies:{antd:"4.4.2","@ant-design/pro-table":"2.4.4"},files:{}}),o.a.createElement(d,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"\u4f7f\u7528-datasource-\u548c-loading"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u4f7f\u7528-datasource-\u548c-loading"},o.a.createElement("span",{className:"icon icon-link"})),"\u4f7f\u7528 dataSource \u548c loading")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\n\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState<TableListItem[]>([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",jsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n  return (\n    <ProTable\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},{path:"/_demos/data-source",dependencies:{antd:"4.4.2","@ant-design/icons":"4.2.1","@ant-design/pro-table":"2.4.4"},files:{}}),o.a.createElement(c,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"\u53d7\u63a7\u7684\u5217\u663e\u793a\u9690\u85cf"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u53d7\u63a7\u7684\u5217\u663e\u793a\u9690\u85cf"},o.a.createElement("span",{className:"icon icon-link"})),"\u53d7\u63a7\u7684\u5217\u663e\u793a\u9690\u85cf"),o.a.createElement("p",null,"\u53ef\u4ee5\u9ed8\u8ba4\u9690\u85cf\u67d0\u4e9b\u680f\uff0c\u4f46\u662f\u5728\u64cd\u4f5c\u680f\u4e2d\u53ef\u4ee5\u9009\u62e9")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React, { useState } from 'react';\nimport { Input } from 'antd';\nimport ProTable, { ProColumns, ColumnsState } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 100; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    width: 200,\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a>\u64cd\u4f5c</a>, <a>\u5220\u9664</a>],\n  },\n];\n\nexport default () => {\n  const [columnsStateMap, setColumnsStateMap] = useState<{\n    [key: string]: ColumnsState;\n  }>({\n    name: {\n      show: false,\n    },\n  });\n  return (\n    <>\n      <code>{JSON.stringify(columnsStateMap)}</code>\n      <ProTable<TableListItem, { keyWord?: string }>\n        columns={columns}\n        request={(params = {}) =>\n          Promise.resolve({\n            data: tableListDataSource.filter((item) => {\n              if (!params.keyWord) {\n                return true;\n              }\n              if (item.name.includes(params.keyWord) || item.status.includes(params.keyWord)) {\n                return true;\n              }\n              return false;\n            }),\n            success: true,\n          })\n        }\n        rowKey=\"key\"\n        pagination={{\n          showSizeChanger: true,\n        }}\n        columnsStateMap={columnsStateMap}\n        onColumnsStateChange={(map) => setColumnsStateMap(map)}\n        search={false}\n        dateFormatter=\"string\"\n        headerTitle=\"\u53d7\u63a7\u6a21\u5f0f\"\n        toolBarRender={() => [<Input.Search placeholder=\"\u8bf7\u8f93\u5165\" />]}\n      />\n    </>\n  );\n};\n",jsx:"import React, { useState } from 'react';\nimport { Input } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 100; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    width: 200,\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a>\u64cd\u4f5c</a>, <a>\u5220\u9664</a>],\n  },\n];\nexport default () => {\n  const [columnsStateMap, setColumnsStateMap] = useState({\n    name: {\n      show: false,\n    },\n  });\n  return (\n    <>\n      <code>{JSON.stringify(columnsStateMap)}</code>\n      <ProTable\n        columns={columns}\n        request={(params = {}) =>\n          Promise.resolve({\n            data: tableListDataSource.filter(item => {\n              if (!params.keyWord) {\n                return true;\n              }\n\n              if (item.name.includes(params.keyWord) || item.status.includes(params.keyWord)) {\n                return true;\n              }\n\n              return false;\n            }),\n            success: true,\n          })\n        }\n        rowKey=\"key\"\n        pagination={{\n          showSizeChanger: true,\n        }}\n        columnsStateMap={columnsStateMap}\n        onColumnsStateChange={map => setColumnsStateMap(map)}\n        search={false}\n        dateFormatter=\"string\"\n        headerTitle=\"\u53d7\u63a7\u6a21\u5f0f\"\n        toolBarRender={() => [<Input.Search placeholder=\"\u8bf7\u8f93\u5165\" />]}\n      />\n    </>\n  );\n};\n"}},{path:"/_demos/columns-state-map",dependencies:{antd:"4.4.2","@ant-design/pro-table":"2.4.4"},files:{}}),o.a.createElement(m,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"\u8f6e\u8be2"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u8f6e\u8be2"},o.a.createElement("span",{className:"icon icon-link"})),"\u8f6e\u8be2")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React, { useEffect, useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable, { ProColumns, ActionType } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst timeAwait = (waitTime: number) =>\n  new Promise((res) =>\n    window.setTimeout(() => {\n      res();\n    }, waitTime),\n  );\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\n\nexport default () => {\n  const actionRef = useRef<ActionType | undefined>(undefined);\n  useEffect(() => {\n    let id = 0;\n    const loop = () => {\n      id = window.setTimeout(() => {\n        const { current } = actionRef;\n        if (current) {\n          current.reload();\n        }\n        loop();\n      }, 1000);\n    };\n    loop();\n    return () => {\n      window.clearTimeout(id);\n    };\n  }, []);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      actionRef={actionRef}\n      request={async () => {\n        await timeAwait(500);\n        return {\n          data: tableListDataSource,\n          success: true,\n          total: tableListDataSource.length,\n        };\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8f6e\u8be2\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",jsx:"import React, { useEffect, useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst timeAwait = waitTime =>\n  new Promise(res =>\n    window.setTimeout(() => {\n      res();\n    }, waitTime),\n  );\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\nexport default () => {\n  const actionRef = useRef(undefined);\n  useEffect(() => {\n    let id = 0;\n\n    const loop = () => {\n      id = window.setTimeout(() => {\n        const { current } = actionRef;\n\n        if (current) {\n          current.reload();\n        }\n\n        loop();\n      }, 1000);\n    };\n\n    loop();\n    return () => {\n      window.clearTimeout(id);\n    };\n  }, []);\n  return (\n    <ProTable\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      actionRef={actionRef}\n      request={async () => {\n        await timeAwait(500);\n        return {\n          data: tableListDataSource,\n          success: true,\n          total: tableListDataSource.length,\n        };\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8f6e\u8be2\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},{path:"/_demos/pollinga",dependencies:{antd:"4.4.2","@ant-design/icons":"4.2.1","@ant-design/pro-table":"2.4.4"},files:{}}),o.a.createElement(p,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"\u5d4c\u5957\u8868\u683c"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u5d4c\u5957\u8868\u683c"},o.a.createElement("span",{className:"icon icon-link"})),"\u5d4c\u5957\u8868\u683c")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React, { useState, useEffect } from 'react';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 1; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\n\nconst expandedRowRender = () => {\n  const data = [];\n  for (let i = 0; i < 3; i += 1) {\n    data.push({\n      key: i,\n      date: '2014-12-24 23:12:00',\n      name: 'This is production name',\n      upgradeNum: 'Upgraded: 56',\n    });\n  }\n  return (\n    <ProTable\n      columns={[\n        { title: 'Date', dataIndex: 'date', key: 'date' },\n        { title: 'Name', dataIndex: 'name', key: 'name' },\n        {\n          title: 'Status',\n          key: 'state',\n        },\n        { title: 'Upgrade Status', dataIndex: 'upgradeNum', key: 'upgradeNum' },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          key: 'operation',\n          render: () => [<a>Pause</a>, <a>Stop</a>],\n        },\n      ]}\n      headerTitle={false}\n      search={false}\n      options={false}\n      dataSource={data}\n      pagination={false}\n    />\n  );\n};\n\nexport default () => {\n  const [dataSource, setDataSource] = useState<TableListItem[]>([]);\n  useEffect(() => {\n    setDataSource(tableListDataSource);\n  }, []);\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      dataSource={dataSource}\n      expandable={{ expandedRowRender }}\n      dateFormatter=\"string\"\n      headerTitle=\"\u5d4c\u5957\u8868\u683c\"\n    />\n  );\n};\n",jsx:"import React, { useState, useEffect } from 'react';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 1; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\n\nconst expandedRowRender = () => {\n  const data = [];\n\n  for (let i = 0; i < 3; i += 1) {\n    data.push({\n      key: i,\n      date: '2014-12-24 23:12:00',\n      name: 'This is production name',\n      upgradeNum: 'Upgraded: 56',\n    });\n  }\n\n  return (\n    <ProTable\n      columns={[\n        {\n          title: 'Date',\n          dataIndex: 'date',\n          key: 'date',\n        },\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n        },\n        {\n          title: 'Status',\n          key: 'state',\n        },\n        {\n          title: 'Upgrade Status',\n          dataIndex: 'upgradeNum',\n          key: 'upgradeNum',\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          key: 'operation',\n          render: () => [<a>Pause</a>, <a>Stop</a>],\n        },\n      ]}\n      headerTitle={false}\n      search={false}\n      options={false}\n      dataSource={data}\n      pagination={false}\n    />\n  );\n};\n\nexport default () => {\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    setDataSource(tableListDataSource);\n  }, []);\n  return (\n    <ProTable\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      dataSource={dataSource}\n      expandable={{\n        expandedRowRender,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"\u5d4c\u5957\u8868\u683c\"\n    />\n  );\n};\n"}},{path:"/_demos/nested-table",dependencies:{"@ant-design/pro-table":"2.4.4"},files:{}}),o.a.createElement(f,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"\u81ea\u5b9a\u4e49\u8868\u683c\u7684\u4e3b\u4f53"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u81ea\u5b9a\u4e49\u8868\u683c\u7684\u4e3b\u4f53"},o.a.createElement("span",{className:"icon icon-link"})),"\u81ea\u5b9a\u4e49\u8868\u683c\u7684\u4e3b\u4f53")),o.a.createElement(l.a,Object(a["a"])({source:{tsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Result, Card, Descriptions } from 'antd';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\n\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState<TableListItem[]>([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      tableRender={(_, dom) => (\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n          }}\n        >\n          <Result status=\"404\" title=\"404\" subTitle=\"404\" />\n          <div\n            style={{\n              flex: 1,\n            }}\n          >\n            {dom}\n          </div>\n        </div>\n      )}\n      tableExtraRender={(_, data) => (\n        <Card>\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"Row\">{data.length}</Descriptions.Item>\n            <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\n            <Descriptions.Item label=\"Association\">\n              <a>421421</a>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Creation Time\">2017-01-10</Descriptions.Item>\n            <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\n            <Descriptions.Item label=\"Remarks\">\n              Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\n            </Descriptions.Item>\n          </Descriptions>\n        </Card>\n      )}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",jsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Result, Card, Descriptions } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n  return (\n    <ProTable\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      tableRender={(_, dom) => (\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n          }}\n        >\n          <Result status=\"404\" title=\"404\" subTitle=\"404\" />\n          <div\n            style={{\n              flex: 1,\n            }}\n          >\n            {dom}\n          </div>\n        </div>\n      )}\n      tableExtraRender={(_, data) => (\n        <Card>\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"Row\">{data.length}</Descriptions.Item>\n            <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\n            <Descriptions.Item label=\"Association\">\n              <a>421421</a>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Creation Time\">2017-01-10</Descriptions.Item>\n            <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\n            <Descriptions.Item label=\"Remarks\">\n              Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\n            </Descriptions.Item>\n          </Descriptions>\n        </Card>\n      )}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},{path:"/_demos/render-table",dependencies:{antd:"4.4.2","@ant-design/icons":"4.2.1","@ant-design/pro-table":"2.4.4"},files:{}}),o.a.createElement(h,null)))}},W7o3:function(e,n,t){"use strict";t.r(n);t("1vPl");for(var a=t("5rEg"),r=t("tJVT"),o=t("q1tI"),s=t.n(o),l=t("2YZa"),i={0:"close",1:"running",2:"online",3:"error"},u=[],d=0;d<100;d+=1)u.push({key:d,name:"TradeCode ".concat(d),status:i[Math.floor(10*Math.random())%4],updatedAt:Date.now()-Math.floor(1e3*Math.random()),createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*d,progress:Math.ceil(100*Math.random())+1});var c=[{title:"\u6807\u9898",dataIndex:"name"},{title:"\u72b6\u6001",dataIndex:"status",initialValue:"all",width:100,filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},close:{text:"\u5173\u95ed",status:"Default"},running:{text:"\u8fd0\u884c\u4e2d",status:"Processing"},online:{text:"\u5df2\u4e0a\u7ebf",status:"Success"},error:{text:"\u5f02\u5e38",status:"Error"}}},{title:"\u521b\u5efa\u65f6\u95f4",key:"since",dataIndex:"createdAt",width:200,valueType:"dateTime"},{title:"\u66f4\u65b0\u65f6\u95f4",key:"since2",width:120,dataIndex:"createdAt",valueType:"date"},{title:"\u64cd\u4f5c",key:"option",width:120,valueType:"option",render:()=>[s.a.createElement("a",null,"\u64cd\u4f5c"),s.a.createElement("a",null,"\u5220\u9664")]}];n["default"]=()=>{var e=Object(o["useState"])({name:{show:!1}}),n=Object(r["a"])(e,2),t=n[0],i=n[1];return s.a.createElement(s.a.Fragment,null,s.a.createElement("code",null,JSON.stringify(t)),s.a.createElement(l["c"],{columns:c,request:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Promise.resolve({data:u.filter(n=>!e.keyWord||!(!n.name.includes(e.keyWord)&&!n.status.includes(e.keyWord))),success:!0})},rowKey:"key",pagination:{showSizeChanger:!0},columnsStateMap:t,onColumnsStateChange:e=>i(e),search:!1,dateFormatter:"string",headerTitle:"\u53d7\u63a7\u6a21\u5f0f",toolBarRender:()=>[s.a.createElement(a["a"].Search,{placeholder:"\u8bf7\u8f93\u5165"})]}))}},YNjy:function(e,n,t){"use strict";t.r(n);t("L/Qf");for(var a=t("2/Rp"),r=t("tJVT"),o=t("q1tI"),s=t.n(o),l=t("xvlK"),i=t("2YZa"),u={0:"close",1:"running",2:"online",3:"error"},d=[],c=0;c<20;c+=1)d.push({key:c,name:"TradeCode ".concat(c),status:u[Math.floor(10*Math.random())%4],updatedAt:Date.now()-Math.floor(1e3*Math.random()),createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*c,progress:Math.ceil(100*Math.random())+1});var m=[{title:"\u5e8f\u53f7",dataIndex:"index",valueType:"index",width:80},{title:"\u72b6\u6001",dataIndex:"status",initialValue:"all",width:100,filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},close:{text:"\u5173\u95ed",status:"Default"},running:{text:"\u8fd0\u884c\u4e2d",status:"Processing"},online:{text:"\u5df2\u4e0a\u7ebf",status:"Success"},error:{text:"\u5f02\u5e38",status:"Error"}}},{title:"\u8fdb\u5ea6",key:"progress",dataIndex:"progress",valueType:e=>({type:"progress",status:"error"!==e.status?"active":"exception"}),width:200},{title:"\u66f4\u65b0\u65f6\u95f4",key:"since2",width:120,dataIndex:"createdAt",valueType:"date"}];n["default"]=()=>{var e=Object(o["useState"])(!0),n=Object(r["a"])(e,2),t=n[0],u=n[1],c=Object(o["useState"])([]),p=Object(r["a"])(c,2),f=p[0],h=p[1];return Object(o["useEffect"])(()=>{setTimeout(()=>{u(!1),h(d)},5e3)},[]),s.a.createElement(i["c"],{columns:m,rowKey:"key",pagination:{showSizeChanger:!0},loading:t,dataSource:f,options:{density:!0,reload:()=>{u(!0),setTimeout(()=>{u(!1)},1e3)},fullScreen:!0,setting:!0},dateFormatter:"string",headerTitle:"dataSource \u548c loading",toolBarRender:()=>[s.a.createElement(a["a"],{key:"3",type:"primary"},s.a.createElement(l["a"],null),"\u65b0\u5efa")]})}},aBcX:function(e,n,t){"use strict";t.r(n);t("L/Qf");var a=t("2/Rp"),r=t("WmNS"),o=t.n(r),s=t("9og8"),l=(t("Y2jk"),t("zeV3")),i=(t("0lcf"),t("mr32")),u=t("q1tI"),d=t.n(u),c=t("xvlK"),m=t("2YZa"),p=t("io9h"),f=[{title:"\u6807\u9898",dataIndex:"title",copyable:!0,ellipsis:!0,width:200,hideInSearch:!0},{title:"\u72b6\u6001",dataIndex:"state",initialValue:"all",filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},open:{text:"\u672a\u89e3\u51b3",status:"Error"},closed:{text:"\u5df2\u89e3\u51b3",status:"Success"}}},{title:"\u6807\u7b7e",dataIndex:"labels",width:120,render:(e,n)=>d.a.createElement(l["default"],null,n.labels.map(e=>{var n=e.name,t=e.id,a=e.color;return d.a.createElement(i["a"],{color:a,key:t},n)}))},{title:"\u521b\u5efa\u65f6\u95f4",key:"since",dataIndex:"created_at",valueType:"dateTime"},{title:"option",valueType:"option",dataIndex:"id",render:(e,n)=>[d.a.createElement("a",{key:"1",href:n.html_url,target:"_blank",rel:"noopener noreferrer"},"\u67e5\u770b"),d.a.createElement(m["b"],{key:"2",onSelect:e=>window.alert(e),menus:[{key:"copy",name:"\u590d\u5236"},{key:"delete",name:"\u5220\u9664"}]})]}];n["default"]=()=>d.a.createElement(m["c"],{columns:f,request:Object(s["a"])(o.a.mark((function e(){var n,t=arguments;return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t.length>0&&void 0!==t[0]?t[0]:{},e.abrupt("return",Object(p["a"])("https://proapi.azurewebsites.net/github/issues",{params:n}));case 2:case"end":return e.stop()}}),e)}))),rowKey:"id",rowSelection:{},tableAlertRender:e=>{var n=e.selectedRowKeys,t=e.selectedRows;return"\u5f53\u524d\u5171\u9009\u4e2d ".concat(n.length," \u9879\uff0c\u5171\u6709 ").concat(t.reduce((e,n)=>"open"===n.state?e+1:e,0)," \u9879\u672a\u89e3\u51b3 ")},tableAlertOptionRender:e=>{var n=e.onCleanSelected;return d.a.createElement(l["default"],null,d.a.createElement("a",null,"\u81ea\u5b9a\u4e49"),d.a.createElement("a",{onClick:n},"\u6e05\u7a7a"))},dateFormatter:"string",headerTitle:"\u6279\u91cf\u64cd\u4f5c",toolBarRender:(e,n)=>{var t=n.selectedRowKeys;return[d.a.createElement(a["a"],{key:"3",type:"primary"},d.a.createElement(c["a"],null),"\u65b0\u5efa"),t&&t.length&&d.a.createElement(a["a"],{key:"3",onClick:()=>{window.alert(t.join("-"))}},"\u6279\u91cf\u5220\u9664")]}})},gnUZ:function(e,n,t){"use strict";t.r(n);t("L/Qf");for(var a=t("2/Rp"),r=t("q1tI"),o=t.n(r),s=t("2YZa"),l=t("xvlK"),i={0:"close",1:"running",2:"online",3:"error"},u=[],d=0;d<100;d+=1)u.push({key:d,name:"TradeCode ".concat(d),status:i[Math.floor(10*Math.random())%4],updatedAt:Date.now()-Math.floor(1e3*Math.random()),createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*d,progress:Math.ceil(100*Math.random())+1});var c=[{title:"\u6807\u9898",dataIndex:"name",render:e=>o.a.createElement("a",null,e)},{title:"\u72b6\u6001",dataIndex:"status",initialValue:"all",width:100,filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},close:{text:"\u5173\u95ed",status:"Default"},running:{text:"\u8fd0\u884c\u4e2d",status:"Processing"},online:{text:"\u5df2\u4e0a\u7ebf",status:"Success"},error:{text:"\u5f02\u5e38",status:"Error"}}},{title:"\u521b\u5efa\u65f6\u95f4",key:"since",dataIndex:"createdAt",width:200,valueType:"dateTime"},{title:"\u66f4\u65b0\u65f6\u95f4",key:"since2",width:120,dataIndex:"createdAt",valueType:"date"},{title:"\u64cd\u4f5c",key:"option",width:120,valueType:"option",render:()=>[o.a.createElement("a",null,"\u64cd\u4f5c"),o.a.createElement("a",null,"\u5220\u9664")]}];n["default"]=()=>o.a.createElement(s["c"],{columns:c,request:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Promise.resolve({data:u.filter(n=>!e.keyWord||(n.name.includes(e.keyWord)||n.status.includes(e.keyWord))),success:!0})},options:{search:{name:"keyWord"}},rowKey:"key",pagination:{showSizeChanger:!0},size:"middle",search:!1,toolBarRender:()=>[o.a.createElement(a["a"],{type:"primary",icon:o.a.createElement(l["a"],null)},"\u65b0\u5efa")],dateFormatter:"string",headerTitle:"\u7b80\u5355\u641c\u7d22"})},l94N:function(e,n,t){"use strict";t.r(n);t("L/Qf");for(var a=t("2/Rp"),r=t("WmNS"),o=t.n(r),s=t("9og8"),l=t("q1tI"),i=t.n(l),u=t("xvlK"),d=t("2YZa"),c={0:"close",1:"running",2:"online",3:"error"},m=[],p=0;p<20;p+=1)m.push({key:p,name:"TradeCode ".concat(p),status:c[Math.floor(10*Math.random())%4],updatedAt:Date.now()-Math.floor(1e3*Math.random()),createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*p,progress:Math.ceil(100*Math.random())+1});var f=e=>new Promise(n=>window.setTimeout(()=>{n()},e)),h=[{title:"\u5e8f\u53f7",dataIndex:"index",valueType:"index",width:80},{title:"\u72b6\u6001",dataIndex:"status",initialValue:"all",width:100,filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},close:{text:"\u5173\u95ed",status:"Default"},running:{text:"\u8fd0\u884c\u4e2d",status:"Processing"},online:{text:"\u5df2\u4e0a\u7ebf",status:"Success"},error:{text:"\u5f02\u5e38",status:"Error"}}},{title:"\u8fdb\u5ea6",key:"progress",dataIndex:"progress",valueType:e=>({type:"progress",status:"error"!==e.status?"active":"exception"}),width:200},{title:"\u66f4\u65b0\u65f6\u95f4",key:"since2",width:120,dataIndex:"createdAt",valueType:"date"}];n["default"]=()=>{var e=Object(l["useRef"])(void 0);return Object(l["useEffect"])(()=>{var n=0,t=()=>{n=window.setTimeout(()=>{var n=e.current;n&&n.reload(),t()},1e3)};return t(),()=>{window.clearTimeout(n)}},[]),i.a.createElement(d["c"],{columns:h,rowKey:"key",pagination:{showSizeChanger:!0},actionRef:e,request:Object(s["a"])(o.a.mark((function e(){return o.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,f(500);case 2:return e.abrupt("return",{data:m,success:!0,total:m.length});case 3:case"end":return e.stop()}}),e)}))),dateFormatter:"string",headerTitle:"\u8f6e\u8be2",toolBarRender:()=>[i.a.createElement(a["a"],{key:"3",type:"primary"},i.a.createElement(u["a"],null),"\u65b0\u5efa")]})}},pMwT:function(e,n,t){"use strict";t.r(n);t("L/Qf");var a=t("2/Rp"),r=(t("EpIQ"),t("bx4M")),o=(t("SchZ"),t("5ai+"),t("lSNA")),s=t.n(o),l=t("J4zp"),i=t.n(l),u=t("cDf5"),d=t.n(u),c=t("q1tI"),m=t.n(c),p=t("TSYQ"),f=t.n(p),h=t("Zm9Q"),y=t("ACnJ"),g=t("uaoM"),x=t("H84U");function b(e){return void 0!==e&&null!==e}var w=function(e){var n,t=e.itemPrefixCls,a=e.component,r=e.span,o=e.className,l=e.style,i=e.bordered,u=e.label,d=e.content,m=e.colon,p=a;return i?c["createElement"](p,{className:f()((n={},s()(n,"".concat(t,"-item-label"),b(u)),s()(n,"".concat(t,"-item-content"),b(d)),n),o),style:l,colSpan:r},b(u)?u:d):c["createElement"](p,{className:f()("".concat(t,"-item"),o),style:l,colSpan:r},u&&c["createElement"]("span",{className:f()("".concat(t,"-item-label"),s()({},"".concat(t,"-item-no-colon"),!m))},u),d&&c["createElement"]("span",{className:f()("".concat(t,"-item-content"))},d))},v=w;function T(e,n,t){var a=n.colon,r=n.prefixCls,o=n.bordered,s=t.component,l=t.type,i=t.showLabel,u=t.showContent;return e.map((function(e,n){var t=e.props,d=t.label,m=t.children,p=t.prefixCls,f=void 0===p?r:p,h=t.className,y=t.style,g=t.span,x=void 0===g?1:g,b=e.key;return"string"===typeof s?c["createElement"](v,{key:"".concat(l,"-").concat(b||n),className:h,style:y,span:x,colon:a,component:s,itemPrefixCls:f,bordered:o,label:i?d:null,content:u?m:null}):[c["createElement"](v,{key:"label-".concat(b||n),className:h,style:y,span:1,colon:a,component:s[0],itemPrefixCls:f,bordered:o,label:d}),c["createElement"](v,{key:"content-".concat(b||n),className:h,style:y,span:2*x-1,component:s[1],itemPrefixCls:f,bordered:o,content:m})]}))}var E=function(e){var n=e.prefixCls,t=e.vertical,a=e.row,r=e.index,o=e.bordered;return t?c["createElement"](c["Fragment"],null,c["createElement"]("tr",{key:"label-".concat(r),className:"".concat(n,"-row")},T(a,e,{component:"th",type:"label",showLabel:!0})),c["createElement"]("tr",{key:"content-".concat(r),className:"".concat(n,"-row")},T(a,e,{component:"td",type:"content",showContent:!0}))):c["createElement"]("tr",{key:r,className:"".concat(n,"-row")},T(a,e,{component:o?["th","td"]:"td",type:"item",showLabel:!0,showContent:!0}))},S=E,M=function(e){var n=e.children;return n},k=M,I=t("0n0R"),D={xxl:3,xl:3,lg:3,md:3,sm:2,xs:1};function C(e,n){if("number"===typeof e)return e;if("object"===d()(e))for(var t=0;t<y["b"].length;t++){var a=y["b"][t];if(n[a]&&void 0!==e[a])return e[a]||D[a]}return 3}function R(e,n,t){var a=e;return(void 0===n||n>t)&&(a=Object(I["a"])(e,{span:t}),Object(g["a"])(void 0===n,"Descriptions","Sum of column `span` in a line not match `column` of Descriptions.")),a}function P(e,n){var t=Object(h["a"])(e).filter((function(e){return e})),a=[],r=[],o=n;return t.forEach((function(e,s){var l,i=null===(l=e.props)||void 0===l?void 0:l.span,u=i||1;if(s===t.length-1)return r.push(R(e,i,o)),void a.push(r);u<o?(o-=u,r.push(e)):(r.push(R(e,u,o)),a.push(r),o=n,r=[])})),a}function L(e){var n,t=e.prefixCls,a=e.title,r=e.column,o=void 0===r?D:r,l=e.colon,u=void 0===l||l,m=e.bordered,p=e.layout,h=e.children,g=e.className,b=e.style,w=e.size,v=c["useContext"](x["b"]),T=v.getPrefixCls,E=v.direction,M=T("descriptions",t),k=c["useState"]({}),I=i()(k,2),R=I[0],L=I[1],A=C(o,R);c["useEffect"]((function(){var e=y["a"].subscribe((function(e){"object"===d()(o)&&L(e)}));return function(){y["a"].unsubscribe(e)}}),[]);var B=P(h,A);return c["createElement"]("div",{className:f()(M,g,(n={},s()(n,"".concat(M,"-").concat(w),w&&"default"!==w),s()(n,"".concat(M,"-bordered"),!!m),s()(n,"".concat(M,"-rtl"),"rtl"===E),n)),style:b},a&&c["createElement"]("div",{className:"".concat(M,"-title")},a),c["createElement"]("div",{className:"".concat(M,"-view")},c["createElement"]("table",null,c["createElement"]("tbody",null,B.map((function(e,n){return c["createElement"](S,{key:n,index:n,colon:u,prefixCls:M,vertical:"vertical"===p,bordered:m,row:e})}))))))}L.Item=k;for(var A=L,B=(t("/UTi"),t("MoRW")),O=t("tJVT"),K=t("xvlK"),_=t("2YZa"),j={0:"close",1:"running",2:"online",3:"error"},N=[],q=0;q<20;q+=1)N.push({key:q,name:"TradeCode ".concat(q),status:j[Math.floor(10*Math.random())%4],updatedAt:Date.now()-Math.floor(1e3*Math.random()),createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*q,progress:Math.ceil(100*Math.random())+1});var z=[{title:"\u5e8f\u53f7",dataIndex:"index",valueType:"index",width:80},{title:"\u72b6\u6001",dataIndex:"status",initialValue:"all",width:100,filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},close:{text:"\u5173\u95ed",status:"Default"},running:{text:"\u8fd0\u884c\u4e2d",status:"Processing"},online:{text:"\u5df2\u4e0a\u7ebf",status:"Success"},error:{text:"\u5f02\u5e38",status:"Error"}}},{title:"\u8fdb\u5ea6",key:"progress",dataIndex:"progress",valueType:e=>({type:"progress",status:"error"!==e.status?"active":"exception"}),width:200},{title:"\u66f4\u65b0\u65f6\u95f4",key:"since2",width:120,dataIndex:"createdAt",valueType:"date"}];n["default"]=()=>{var e=Object(c["useState"])(!0),n=Object(O["a"])(e,2),t=n[0],o=n[1],s=Object(c["useState"])([]),l=Object(O["a"])(s,2),i=l[0],u=l[1];return Object(c["useEffect"])(()=>{setTimeout(()=>{o(!1),u(N)},5e3)},[]),m.a.createElement(_["c"],{columns:z,rowKey:"key",pagination:{showSizeChanger:!0},tableRender:(e,n)=>m.a.createElement("div",{style:{display:"flex",width:"100%"}},m.a.createElement(B["a"],{status:"404",title:"404",subTitle:"404"}),m.a.createElement("div",{style:{flex:1}},n)),tableExtraRender:(e,n)=>m.a.createElement(r["default"],null,m.a.createElement(A,{size:"small",column:3},m.a.createElement(A.Item,{label:"Row"},n.length),m.a.createElement(A.Item,{label:"Created"},"Lili Qu"),m.a.createElement(A.Item,{label:"Association"},m.a.createElement("a",null,"421421")),m.a.createElement(A.Item,{label:"Creation Time"},"2017-01-10"),m.a.createElement(A.Item,{label:"Effective Time"},"2017-10-10"),m.a.createElement(A.Item,{label:"Remarks"},"Gonghu Road, Xihu District, Hangzhou, Zhejiang, China"))),loading:t,dataSource:i,options:{density:!0,reload:()=>{o(!0),setTimeout(()=>{o(!1)},1e3)},fullScreen:!0,setting:!0},dateFormatter:"string",headerTitle:"dataSource \u548c loading",toolBarRender:()=>[m.a.createElement(a["a"],{key:"3",type:"primary"},m.a.createElement(K["a"],null),"\u65b0\u5efa")]})}},"s/ah":function(e,n,t){"use strict";t.r(n);for(var a=t("tJVT"),r=t("q1tI"),o=t.n(r),s=t("2YZa"),l={0:"close",1:"running",2:"online",3:"error"},i=[],u=0;u<1;u+=1)i.push({key:u,name:"TradeCode ".concat(u),status:l[Math.floor(10*Math.random())%4],updatedAt:Date.now()-Math.floor(1e3*Math.random()),createdAt:Date.now()-Math.floor(2e3*Math.random()),money:Math.floor(2e3*Math.random())*u,progress:Math.ceil(100*Math.random())+1});var d=[{title:"\u5e8f\u53f7",dataIndex:"index",valueType:"index",width:80},{title:"\u72b6\u6001",dataIndex:"status",initialValue:"all",width:100,filters:!0,valueEnum:{all:{text:"\u5168\u90e8",status:"Default"},close:{text:"\u5173\u95ed",status:"Default"},running:{text:"\u8fd0\u884c\u4e2d",status:"Processing"},online:{text:"\u5df2\u4e0a\u7ebf",status:"Success"},error:{text:"\u5f02\u5e38",status:"Error"}}},{title:"\u8fdb\u5ea6",key:"progress",dataIndex:"progress",valueType:e=>({type:"progress",status:"error"!==e.status?"active":"exception"}),width:200},{title:"\u66f4\u65b0\u65f6\u95f4",key:"since2",width:120,dataIndex:"createdAt",valueType:"date"}],c=()=>{for(var e=[],n=0;n<3;n+=1)e.push({key:n,date:"2014-12-24 23:12:00",name:"This is production name",upgradeNum:"Upgraded: 56"});return o.a.createElement(s["c"],{columns:[{title:"Date",dataIndex:"date",key:"date"},{title:"Name",dataIndex:"name",key:"name"},{title:"Status",key:"state"},{title:"Upgrade Status",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Action",dataIndex:"operation",key:"operation",render:()=>[o.a.createElement("a",null,"Pause"),o.a.createElement("a",null,"Stop")]}],headerTitle:!1,search:!1,options:!1,dataSource:e,pagination:!1})};n["default"]=()=>{var e=Object(r["useState"])([]),n=Object(a["a"])(e,2),t=n[0],l=n[1];return Object(r["useEffect"])(()=>{l(i)},[]),o.a.createElement(s["c"],{columns:d,rowKey:"key",pagination:{showSizeChanger:!0},dataSource:t,expandable:{expandedRowRender:c},dateFormatter:"string",headerTitle:"\u5d4c\u5957\u8868\u683c"})}}}]);